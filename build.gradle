import org.apache.ivy.plugins.resolver.URLResolver

apply plugin: 'groovy'
apply plugin: 'gae'
apply plugin: 'gaelyk'
apply plugin: 'idea'
apply plugin: 'gae-geb'

def compatibilityVersion = 1.5
sourceCompatibility = compatibilityVersion
targetCompatibility = compatibilityVersion

buildscript {
	ext.set('gitHub', {
		def resolver = new URLResolver()

		resolver.with {
			name = 'GitHub'
			addArtifactPattern 'http://cloud.github.com/downloads/[organisation]/[module]/[module]-[revision].[ext]'
		}

		resolver
	})

	repositories {
		mavenCentral()
	}

	dependencies {
		classpath 'org.gradle.api.plugins:gradle-gae-plugin:0.7.2'
		classpath 'org.gradle.api.plugins:gradle-gaelyk-plugin:0.3.2'
		classpath 'org.gradle.api.plugins:gradle-gae-geb-plugin:0.2'
	}
}

repositories {
	mavenCentral()
	add gitHub()
	mavenLocal()
}

dependencies {
	def gaeVersion = '1.6.5'
	def groovyVersion = '1.8.6'
	def gaelykVersion = '1.2'

	compile "org.gaelyk:gaelyk:$gaelykVersion"
	gaeSdk "com.google.appengine:appengine-java-sdk:$gaeVersion"
	groovy "org.codehaus.groovy:groovy-all:$groovyVersion"

	compile "org.markdownj:markdownj:0.3.0-1.0.2b4",
			'org.codehaus.groovy.modules.remote:remote-transport-http:0.4-SNAPSHOT',
			'com.ocpsoft:ocpsoft-pretty-time:1.0.7'

	testCompile 'org.spockframework:spock-core:0.6-groovy-1.8', {
		exclude group: 'org.codehaus.groovy', module: 'groovy-all'
	}
	testCompile 'org.gaelyk:gaelyk-spock:0.3.0.1',
			"com.google.appengine:appengine-api-stubs:$gaeVersion",
			"com.google.appengine:appengine-testing:$gaeVersion"
	functionalTestCompile 'org.codehaus.geb:geb-spock:0.7.0',
			'org.seleniumhq.selenium:selenium-firefox-driver:2.22.0'
	gaeSdk "com.google.appengine:appengine-java-sdk:$gaeVersion"
}

gae {
	downloadSdk = true
	optimizeWar = true
	warDir = file('src/main/webapp/')
}

gaeExplodeWar.dependsOn gaelykPrecompileGroovlet
gaeExplodeWar.dependsOn gaelykPrecompileTemplate

sourceSets.main.output.classesDir = 'src/main/webapp/WEB-INF/classes'

clean {
	delete sourceSets*.output.classesDir
}

task copyRuntimeLibraries(type: Sync) {
	def webAppLibDirName = 'src/main/webapp/WEB-INF/lib'
	description = "Copies runtime libraries to $webAppLibDirName."
	from configurations.runtime
	into webAppLibDirName
}

gaeRun.dependsOn compileGroovy
gaeRun.dependsOn copyRuntimeLibraries

idea {
	project {
		jdkName = 1.6

		ipr {
			withXml { provider ->
				def node = provider.asNode()

				// Set Gradle home
				def gradleSettings = node.appendNode('component', [name: 'GradleSettings'])
				gradleSettings.appendNode('option', [name: 'SDK_HOME', value: gradle.gradleHomeDir])
			}
		}
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '1.0-rc-3'
	distributionUrl = "http://services.gradle.org/distributions/gradle-${gradleVersion}-bin.zip"
}